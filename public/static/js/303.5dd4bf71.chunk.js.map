{"version":3,"file":"static/js/303.5dd4bf71.chunk.js","mappings":"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","sources":["places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","shared/components/UIElements/Card.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Modal from \"../../shared/components/UIElements/Modal\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./PlaceItem.css\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nconst PlaceItem = (props) => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [showMap, setShowMap] = useState(false);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const openMapHandler = () => setShowMap(true);\n  const closeMapHandler = () => setShowMap(false);\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/places/${props.id}`,\n        \"DELETE\",\n        null,\n        {\n          Authorization: `Bearer ${auth.token}`,\n        }\n      );\n      props.onDelete(props.id);\n    } catch (e) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Modal\n        show={showMap}\n        onCancel={closeMapHandler}\n        header={props.address}\n        contentClass=\"place-item__modal-content\"\n        footerClass=\"place-item__modal-actions\"\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\n      >\n        <div className=\"map-container\" style={{ padding: \"5px\" }}>\n          <iframe\n            title=\"map\"\n            width=\"100%\"\n            height=\"100%\"\n            frameBorder=\"0\"\n            scrolling=\"no\"\n            marginHeight=\"0\"\n            marginWidth=\"0\"\n            src={\n              \"https://maps.google.com/maps?q=\" +\n              props.coordinates.lat.toString() +\n              \",\" +\n              props.coordinates.lng.toString() +\n              \"&t=&z=15&ie=UTF8&iwloc=&output=embed\"\n            }\n          ></iframe>\n          <script\n            type=\"text/javascript\"\n            src=\"https://embedmaps.com/google-maps-authorization/script.js?id=5a33be79e53caf0a07dfec499abf84b7b481f165\"\n          ></script>\n        </div>\n      </Modal>\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header=\"Are you sure?\"\n        footerClass=\"place-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>\n          Do you want to proceed and delete this place? Please note that it\n          can't be undone thereafter.\n        </p>\n      </Modal>\n      <li className=\"place-item\">\n        <Card className=\"place-item__content\">\n          {isLoading && <LoadingSpinner asOverlay />}\n          <div className=\"place-item__image\">\n            <img\n              src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\n              alt={props.title}\n            />\n          </div>\n          <div className=\"place-item__info\">\n            <h2>{props.title}</h2>\n            <h3>{props.address}</h3>\n            <p>{props.description}</p>\n          </div>\n          <div className=\"place-item__actions\">\n            <Button inverse onClick={openMapHandler}>\n              VIEW ON MAP\n            </Button>\n            {auth.userId === props.creatorId && (\n              <Button to={`/places/${props.id}`}>EDIT</Button>\n            )}\n\n            {auth.userId === props.creatorId && (\n              <Button danger onClick={showDeleteWarningHandler}>\n                DELETE\n              </Button>\n            )}\n          </div>\n        </Card>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default PlaceItem;\n","import React from \"react\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport PlaceItem from \"./PlaceItem\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport \"./PlaceList.css\";\n\nconst PlaceList = (props) => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card>\n          <h2>No places found. Maybe create one?</h2>\n          <Button to=\"/places/new\">Share Place</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"place-list\">\n      {props.items.map((place) => (\n        <PlaceItem\n          key={place.id}\n          id={place.id}\n          image={place.image}\n          title={place.title}\n          description={place.description}\n          address={place.address}\n          creatorId={place.creator}\n          coordinates={place.location}\n          onDelete={props.onDeletePlace}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default PlaceList;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport PlaceList from \"../components/PlaceList\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nconst UserPlaces = () => {\n  const [loadedPlaces, setLoadedPlaces] = useState();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const userId = useParams().userId;\n\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\n        );\n        setLoadedPlaces(responseData.places);\n      } catch (err) {}\n    };\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n  const placeDeletedHandler = (deletedPlaceId) => {\n    setLoadedPlaces((prevPlaces) =>\n      prevPlaces.filter((place) => place.id !== deletedPlaceId)\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedPlaces && (\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UserPlaces;\n","import React from \"react\";\n\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n"],"names":["props","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useState","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","process","id","Authorization","token","onDelete","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","className","style","padding","title","width","height","frameBorder","scrolling","marginHeight","marginWidth","src","coordinates","lat","toString","lng","type","inverse","danger","Card","LoadingSpinner","asOverlay","image","alt","description","userId","creatorId","to","items","length","map","place","creator","location","onDeletePlace","loadedPlaces","setLoadedPlaces","useParams","useEffect","fetchPlaces","responseData","places","deletedPlaceId","prevPlaces","filter","children"],"sourceRoot":""}