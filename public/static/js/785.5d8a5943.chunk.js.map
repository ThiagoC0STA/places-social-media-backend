{"version":3,"file":"static/js/785.5d8a5943.chunk.js","mappings":"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","sources":["shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","shared/components/UIElements/Card.js","shared/hooks/form-hook.js","shared/util/validators.js","user/pages/Auth.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nimport Button from \"./Button\";\r\nimport \"./ImageUpload.css\";\r\n\r\nconst ImageUpload = (props) => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = (e) => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n\r\n    if (e.target.files && e.target.files.length === 1) {\r\n      pickedFile = e.target.files[0];\r\n\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: \"none\" }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl ? (\r\n            <img src={previewUrl} alt=\"Preview\" />\r\n          ) : (\r\n            <p>Please pick an image</p>\r\n          )}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid)\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\n\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\nconst VALIDATOR_TYPE_MIN = \"MIN\";\nconst VALIDATOR_TYPE_MAX = \"MAX\";\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\nconst VALIDATOR_TYPE_FILE = \"FILE\";\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MAXLENGTH = (val) => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val,\n});\nexport const VALIDATOR_MIN = (val) => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = (val) => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useState, useContext } from \"react\";\n\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport \"./Auth.css\";\n\n//Auth \n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: \"\",\n        isValid: false,\n      },\n      password: {\n        value: \"\",\n        isValid: false,\n      },\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n          image: undefined,\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: \"\",\n            isValid: false,\n          },\n          image: {\n            value: null,\n            isValid: false,\n          },\n        },\n        false\n      );\n    }\n    setIsLoginMode((prevMode) => !prevMode);\n  };\n\n  const authSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/users/login`,\n          \"POST\",\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value,\n          }),\n          { \"Content-Type\": \"application/json\" }\n        );\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    } else {\n      try {\n        const formData = new FormData();\n\n        formData.append(\"email\", formState.inputs.email.value);\n        formData.append(\"name\", formState.inputs.name.value);\n        formData.append(\"password\", formState.inputs.password.value);\n        formData.append(\"image\", formState.inputs.image.value);\n\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/users/signup`,\n          \"POST\",\n          formData\n        );\n\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Login Required</h2>\n        <hr />\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && (\n            <Input\n              element=\"input\"\n              id=\"name\"\n              type=\"text\"\n              label=\"Your Name\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a name.\"\n              onInput={inputHandler}\n            />\n          )}\n          {!isLoginMode && (\n            <ImageUpload\n              center\n              id=\"image\"\n              onInput={inputHandler}\n              errorText=\"Please enter an image\"\n            />\n          )}\n          <Input\n            element=\"input\"\n            id=\"email\"\n            type=\"email\"\n            label=\"E-Mail\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email address.\"\n            onInput={inputHandler}\n          />\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(6)]}\n            errorText=\"Please enter a valid password, at least 5 characters.\"\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n          SWITCH TO {isLoginMode ? \"SIGNUP\" : \"LOGIN\"}\n        </Button>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n"],"names":["props","useState","file","setFile","previewUrl","setPreviewUrl","isValid","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","className","id","ref","style","display","type","accept","onChange","e","pickedFile","fileIsValid","target","files","length","onInput","center","src","alt","Button","onClick","current","click","errorText","inputReducer","state","action","value","val","validate","validators","isTouched","useReducer","initialValue","initialValid","inputState","dispatch","changeHandler","event","touchHandler","element","placeholder","onBlur","rows","htmlFor","label","children","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","VALIDATOR_EMAIL","validator","trim","test","auth","useContext","AuthContext","isLoginMode","setIsLoginMode","useHttpClient","isLoading","error","sendRequest","clearError","email","password","inputHandler","setFormData","authSubmitHandler","preventDefault","process","JSON","stringify","responseData","login","userId","token","formData","FormData","append","name","image","ErrorModal","onClear","Card","LoadingSpinner","asOverlay","onSubmit","Input","ImageUpload","disabled","inverse","undefined","prevMode"],"sourceRoot":""}